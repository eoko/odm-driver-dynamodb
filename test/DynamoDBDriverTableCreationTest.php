<?php

namespace Eoko\ODM\Driver\DynamoDB\Test;

use Aws\Result;
use Eoko\ODM\Driver\DynamoDB\Test\Entity\IncompatibleEntity;
use Eoko\ODM\Driver\DynamoDB\Test\Entity\UserEntity;

class DynamoDBDriverTableCreationTest extends BaseTestCase
{
    public static function getClassMetadata($classname = UserEntity::class)
    {
        return parent::getClassMetadata($classname); // TODO: Change the autogenerated stub
    }

    public function testCreateTable()
    {
        $result = $this->getDriver()->createTable($this->getClassMetadata());
        $this->assertInstanceOf(Result::class, $result);
    }

    /**
     * @expectedException \Eoko\ODM\Driver\DynamoDB\IncompatibleTypeException
     */
    public function testInvalidGsi()
    {
        $this->getDriver()->createTable($this->getClassMetadata(IncompatibleEntity::class));
    }

    public static function tearDownAfterClass()
    {
        $retry = 0;
        // Ensure that the Table is finished to be created
        while (self::getDriver()->getTableStatus(self::getClassMetadata()) === 'CREATING' && $retry < 5) {
            sleep($retry++ * $retry);
        }

        self::getDriver()->deleteTable(self::getClassMetadata());

        // Ensure that the Table is really deleted
        while (!self::getDriver()->isTable(self::getClassMetadata()) && $retry < 5) {
            sleep($retry++ * $retry);
        }
    }
}
